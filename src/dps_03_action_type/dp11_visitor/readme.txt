Visitor(访问者)模式：
访问者模式的目的是封装一些施加于某种数据结构元素之上的操作。一旦这些操作需要修改的话，
接受这个操作的数据结构可以保持不变。访问者模式适用于数据结构相对稳定的系统，
它把数据结构和作用于结构上的操作之间的耦合解脱开，使得操作集合可以相对自由的演化。
访问者模式使得增加新的操作变的很容易，就是增加一个新的访问者类。
访问者模式将有关的行为集中到一个访问者对象中，而不是分散到一个个的节点类中。
当使用访问者模式时，要将尽可能多的对象浏览逻辑放在访问者类中，而不是放到它的子类中。
访问者模式可以跨过几个类的等级结构访问属于不同的等级结构的成员类。

　以下是访问者模式的组成结构： 
1) 访问者角色（Visitor）：为该对象结构中具体元素角色声明一个访问操作接口。
该操作接口的名字和参数标识了发送访问请求给具体访问者的具体元素角色。
这样访问者就可以通过该元素角色的特定接口直接访问它。 
2) 具体访问者角色（Concrete Visitor）：实现每个由访问者角色（Visitor）声明的操作。 
3) 元素角色（Element）：定义一个Accept操作，它以一个访问者为参数。 
4) 具体元素角色（Concrete Element）：实现由元素角色提供的Accept操作。 
5) 对象结构角色（Object Structure）：这是使用访问者模式必备的角色。
它要具备以下特征：能枚举它的元素；可以提供一个高层的接口以允许该访问者访问它的元素；
可以是一个复合（组合模式）或是一个集合，如一个列表或一个无序集合。 

Visitor(访问者)模式用到又分派技术，选用于数据结构不变，
即元素角色（Element）固定不变的情况，比如人类只有男人和女人两种性别