什么是设计模式？
设计模式就是在工作中经常遇到的一类问题的解决方案，是一种解决问题的方法，更是一种思想，是智慧的结晶。
设计模式是对被用来在特定场景下解决一般设计问题的类和相互通信的对象的描述。
构成模式的四个基本要素：
(1)模式名称：一个助记名，它用一两个词来描述模式的问题、解决方案和效果。
(2)问题(problem) ：描述了应该在何时使用模式。它解释了设计问题和问题存在的前因后果，它可能描述了特定的设计问题，
如怎样用对象表示算法等。也可能描述了导致不灵活设计的类或对象结构。有时候，问题部分会包括使用模式必须满足的一系列先决条件。
(3)解决方案(solution) 描述了设计的组成成分，它们之间的相互关系及各自的职责和协作方式。因为模式就像一个模板，
可应用于多种不同场合，所以解决方案并不描述一个特定而具体的设计或实现，而是提供设计问题的抽象描述和怎样用一个具有一般意义的元素组合（类或对象组合）来解决这个问题。
(4)效果(consequences) 描述了模式应用的效果及使用模式应权衡的问题。尽管我们描述设计决策时，并不总提到模式效果，
但它们对于评价设计选择和理解使用模式的代价及好处具有重要意义。软件效果大多关注对时间和空间的衡量，它们也表述了语言和实现问题。
因为复用是面向对象设计的要素之一，所以模式效果包括它对系统的灵活性、扩充性或可移植性的影响，显式地列出这些效果对理解和评价这些模式很有帮助。

1.dps_01_build_type中是创建型模式(共6种)；
2.dps_02_structure_type中是结构型模式(共7种) ；
3.dps_03_action_type中是行为模式(共11种)；
4.你可能会数一下源代码里面一共有几种设计模式，表面上看只有22种，实际上关于工厂模式的三种代表都放在dps_01_build_type.dp02_factory
   包中，包括简单工厂，工厂方法，抽象工厂，这样算起来共有24种，但是，由于简单工厂模式违背开放-封闭原则，不建议使用，因此共有 24 - 1 = 23种，
   刚才与GOF提出的数字相吻合；
5.util包是工具类，调度时非常有用，跟设计模式无关；
6.每种设计模式中都有一个readme.txt文件，里面包含模式介绍，角色种类和一些其他说明；

!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!
!!!  包的结构和代码的风格请不要随意更改,因为包的命名和排列规则,代码注释都是很有规律的,而且都很有代表性,              !!!
!!!  每个设计模式中的每个不同角色都用包划分得很清楚了,一旦改动一个,则被改动的类就和其他类的风格不统一,所以要慎重.    !!!
!!!  包中有的package故意保留为空,作为特殊情况下特定一个角色不存在的标志,方便更好的看清楚角色参与情况,最好不要删除.   !!!
!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!




