Facade(外观/门面)模式：
外部与一个子系统的通信必须通过一个统一的门面对象进行。门面模式提供一个高层次的接口，
使得子系统更易于使用。每一个子系统只有一个门面类，而且此门面类只有一个实例，也就是说它是一个单例模式。
但整个系统可以有多个门面类。 

一个系统可以有几个门面类
【GOF】的书中指出：在门面模式中，通常只需要一个门面类，并且此门面类只有一个实例，换言之它是一个单例类。
当然这并不意味着在整个系统里只能有一个门面类，而仅仅是说对每一个子系统只有一个门面类。
或者说，如果一个系统有好几个子系统的话，每一个子系统有一个门面类，整个系统可以有数个门面类。

初学者往往以为通过继承一个门面类便可在子系统中加入新的行为，这是错误的。
门面模式的用意是为子系统提供一个集中化和简化的沟通管道，而不能向子系统加入新的行为。

一个例子
我们考察一个保安系统的例子，以说明门面模式的功效。一个保安系统由两个录像机、
三个电灯、一个遥感器和一个警报器组成。保安系统的操作人员需要经常将这些仪器启动和关闭。

门面模式的两个角色：
门面(Facade)角色：客户端可以调用这个角色的方法。此角色知晓相关的(一个或者多个)子系统的功能和责任。
在正常情况下，本角色会将所有从客户端发来的请求委派到相应的子系统去。
子系统(subsystem)角色：可以同时有一个或者多个子系统。每一个子系统都不是一个单独的类，而是一个类的集合。
每一个子系统都可以被客户端直接调用，或者被门面角色调用。子系统并不知道门面的存在，对于子系统而言，
门面仅仅是另外一个客户端而已。
